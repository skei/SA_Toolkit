[todo, in progress]



----------------------------------------------------------------------
install
----------------------------------------------------------------------

* download from github
* install dependencies
* download/install external sdks
* config
* copy template
* build
* run/test

----------

(copy-paste from older text file..)

just completely wiped my system disk, and reinstalled linux..
and during re-installation of my development setup, i wrote down the
dependencies i had to install before i compiled correctly:

  libx11-dev
  libx11-xcb-dev
  (libxcb1-dev)
  libxcb-util-dev
  libxcb-keysyms1-dev
  libxkbcommon-dev
  libxcb-xkb-dev
  (libopengl-dev)
  mesa-common-dev
  libglu1-mesa-dev
  freeglut3-dev

() = not sure if needed, or automatically dragged in
     as dependency for some of the other deps..


sudo apt-get install libx11-dev libx11-xcb-dev libxcb1-dev libxcb-util-dev libxcb-keysyms1-dev libxkbcommon-dev libxcb-xkb-dev libopengl-dev mesa-common-dev libglu1-mesa-dev freeglut3-dev


----------------------------------------------------------------------
coding style
----------------------------------------------------------------------

todo:
explain/describe/reason-about, problems, solutions/remedies..

* header only
  - global namespace
  - circular dependencies
  - no 'hidden code'
  - single compilation/translation unit
* lock/wait-free
  - roundabouts, not intersections
  - strict separation, few contact points
  - queues, atomic bools
* un_modern c++
  - like c, but with some 'reasonable' c++ features
  - readability
  - no/fewer hidden surprises
  - easier to reason about
  - easier for the compiler/optimizer (?)
* build system
  - one single cpp file, do we need it?
  - unnecessary complexity
